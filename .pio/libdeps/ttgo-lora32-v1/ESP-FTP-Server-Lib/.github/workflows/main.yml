name: Integration Tests

on:
  merge_group:
  pull_request:

jobs:
  build:
    name: Compile Firmware
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: compile-cache
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install PlatformIO
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Checkout code
        uses: actions/checkout@v3
      - run: ln -s ../examples/test.cpp src/test.cpp
      - name: Build PlatformIO Project
        run: pio run

  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - 'src'
          - 'src/Commands'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run clang-format style check for C/C++ programs.
        uses: jidicula/clang-format-action@v4.10.2
        with:
          clang-format-version: '14'
          check-path: ${{ matrix.path }}

  cppcheck:
    name: Run cppcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: check-cache
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install PlatformIO
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run PlatformIO Check
        run: pio check --fail-on-defect high --fail-on-defect medium --fail-on-defect low

  cppcheck-docker:
    name: Run cppcheck in Docker
    runs-on: ubuntu-latest
    env:
      CPPCHECK_ARGS: --enable=all --std=c++20 --inline-suppr src example
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - run: docker pull facthunder/cppcheck:latest
      - name: Run cppcheck and print result
        run: docker run --rm -v ${PWD}:/src facthunder/cppcheck:latest /bin/bash -c "cppcheck $CPPCHECK_ARGS"
      - name: Run cppcheck and create html
        run: docker run --rm -v ${PWD}:/src facthunder/cppcheck:latest /bin/bash -c "cppcheck --xml $CPPCHECK_ARGS 2> report.xml && cppcheck-htmlreport --file=report.xml --report-dir=output"
      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: Cppcheck Report
          path: output
